@startuml
class Tracker{
#String name
#Duration duration
+getDuration()
+getTracker()
+getName()
}

class TaskManager{
-TaskManager parentTask
-list<Tracker> listTracker
+getDuration()
+getTracker()
+createTracker()
#updateDuration()
+getJSON()
+fromJSON()
}

class Task{
-TaskManager parentProject
-List <Interval> listIntervals
-boolean status
+endTask()
+getDuration()
+getTracker()
+createTracker()
+endInterval()
+toString()
+getJSON()
}

class Interval{
-Task parentTask
-LocalDateTime startTime
-LocalDateTime endTime
-Duration duration
-boolean inProgress
+isInProgress()
+getDuration()
+getEndTime()
-updateDuration()
+setTime()
+setEndTime()
+stopInterval()
+update()
+ToString()
+getJSON()
}

Interface Observer

Class Observable

class Clock{
+startTime()
-setTime()
+stopTime()
Timer clock
Observable observable
LocalDateTime time
}


class ClockNotifier{
-clock clockObservable
+addListener()
+removeListener()
}

TaskManager"0.." -- "1.." Task
Tracker<|--(TaskManager, Task)
Task"1"*--"0..*"Interval
Interval--|>Observer
TaskManager o--Tracker
Observable <|-- Clock
Clock --* TimerTask



@enduml